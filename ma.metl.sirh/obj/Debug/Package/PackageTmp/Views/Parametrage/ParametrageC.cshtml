@model Tuple<IEnumerable<ma.metl.sirh.Model.ParametrageClassement>, ma.metl.sirh.Model.ParametrageClassement>


<script type="text/javascript">
    function DeleteAskToConfirm(critereId)
    {       
        $('#Testlbl').html(critereId);
        $('#deleteCritere').modal();
        
    }

    function deleteCritere()
    {
        var id = document.getElementById('Testlbl').innerHTML;
        window.location ='@Url.Action("SupprimerCritere","Parametrage")'+'?critereId='+ id;
    }

    function AjouterCritere() {
        $.validator.unobtrusive.parse("#nouveauCritere");
        $('#nouveauCritere').modal();
    }



    function EditCritere(critereId)
    {
        $('#critereIdM').val(critereId);
       // var url = '<%= Url.Action("getCritereById", "Parametrage") %>';
        var url = '@Url.Action("getCritereById", "Parametrage")';
        //$.getJSON("/Parametrage/getCritereById", { critereId: critereId }, function (data) {
        $.getJSON(url, { critereId: critereId }, function (data) {
            $('#critereM').val(data.critere);
            $('#valeurM').val(data.valeur);
            $('#AnneeM').val(data.annee);
            $('#GradesM').val(data.grade);
            $('#editCritere').modal();
        });   
    }

    function Enregistrer() {
        var error = 0;
        var valeurAnnee = document.getElementById("AnneeA").value;
        if (valeurAnnee == "Sélectionnez") {
            document.getElementById("msgErrorAnnee").style.display = "block";
            error++;
        }
        else {
            document.getElementById("msgErrorAnnee").style.display = "hidden";

        }

        var valeurTitre = document.getElementById("critere").value;
        if (valeurTitre == "") {
            document.getElementById("msgErrorCritere").style.display = "block";
            error++;
        }
        else {
            document.getElementById("msgErrorCritere").style.display = "hidden";
        }

        var valeurTitre = document.getElementById("valeur").value;
        if (valeurTitre == "") {
            document.getElementById("msgErrorValeur").style.display = "block";
            error++;
        }
        else {
            document.getElementById("msgErrorValeur").style.display = "hidden";
        }

        var valeurGrade = document.getElementById("GradesA").value;
        if (valeurGrade == "") {
            document.getElementById("msgErrorGrade").style.display = "block";
            error++;
        }
        else {
            document.getElementById("msgErrorGrade").style.display = "hidden";
        }
        if (error == 0) {
            document.getElementById("form-nouveauCritere").submit();
        }
    }

    function Modifier() {
        var error = 0;
        var valeurAnnee = document.getElementById("AnneeM").value;
        if (valeurAnnee == "Sélectionnez") {
            document.getElementById("msgErrorAnneeM").style.display = "block";
            error++;
        }
        else {
            document.getElementById("msgErrorAnneeM").style.display = "hidden";

        }

        var valeurTitre = document.getElementById("critereM").value;
        if (valeurTitre == "") {
            document.getElementById("msgErrorCritereM").style.display = "block";
            error++;
        }
        else {
            document.getElementById("msgErrorCritereM").style.display = "hidden";
        }

        var valeurTitre = document.getElementById("valeurM").value;
        if (valeurTitre == "") {
            document.getElementById("msgErrorValeurM").style.display = "block";
            error++;
        }
        else {
            document.getElementById("msgErrorValeurM").style.display = "hidden";
        }

        var valeurGrade = document.getElementById("GradesM").value;
        if (valeurGrade == "") {
            document.getElementById("msgErrorGradeM").style.display = "block";
            error++;
        }
        else {
            document.getElementById("msgErrorGradeM").style.display = "hidden";
        }
        if (error == 0) {
            document.getElementById("form-editCritere").submit();
        }
    }

</script>

@{var roles = Session["listRoles"] as List<string>;}
<fieldset class="col-md-10 col-md-offset-1">
    <form name="form-paramQuota" id="form-paramQuota" action="" method="post" class="form-horizontal">
        <div class="form-group">
            <div class="col-md-3">
                <label id="Testlbl"></label>                
            </div>
            </div>
            <div class="form-group">
                <div class="col-md-3">
                    <label for="annee"> Année :</label>
                </div>
                <div class="col-md-3">
                    @Html.DropDownList("Annee", null, "Sélectionnez", new { @class = "form-control", onchange = "this.form.submit();" })

                </div>
                <div class="col-md-3">
                    <label for="grade"> Grade :</label>
                </div>
                <div class="col-md-3">
                    @Html.DropDownList("Grade", null, "Sélectionnez", new { @class = "form-control", onchange = "this.form.submit();" })

                </div>
            </div>
</form>
</fieldset>
 <fieldset class="col-md-10 col-md-offset-1">
        <div class="table-responsive">
            <table class="table table table-bordered table-striped  table-hover" id="myTable">
                <thead>
                    <tr>
                        <th>Critère</th>
                        <th>Coefficient</th>
                        <th>Année</th>
                        <th>Grade</th>
                        <th width="90">&nbsp;</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Item1)
                    {
                        <tr>
                            <td>@Html.DisplayFor(modelItem => item.Critere)</td>
                            <td>@Html.DisplayFor(modelItem => item.Valeur)</td>
                            <td>@Html.DisplayFor(modelItem => item.Annee)</td>
                            <td>@Html.DisplayFor(modelItem => item.Grade.Description)</td>
                             
                            <td>
                           @if (roles.Contains("Param_Avc_Modification"))
                                {
                                <a class="btn btn-custom btn-xs" href="javascript:EditCritere(@item.Id,'@item.Critere',@item.Valeur,'@item.Annee','@item.Grade.Id')" title="Editer">
                                    <i class="fa fa-edit"></i>
                                </a>
                                }
                           @if (roles.Contains("Param_Avc_Suppression "))
                            {
                                <a class="btn btn-custom btn-xs" href="javascript:DeleteAskToConfirm(@item.Id)" title="Supprimer">
                                    <i class="fa fa-trash-o"></i>
                                </a>
                           }

                                
                            </td>

                        </tr> }
                <tbody>
            </table>
        </div>
        <div class="b-right">
     @if (roles.Contains("Param_Avc_Creation"))
       {
            <a class="btn btn-custom" href="javascript:AjouterCritere()">
                <i class="fa fa-plus"></i>
                Nouveau Critère
            </a>
        }
        </div>
    </fieldset>
    <!-- **************** Popups **************** -->
    <!-- **** nouveauCritère **** -->

    <div id="nouveauCritere" class="modal fade">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title">Nouveau Critère de classement</h4>
                </div>
                <div class="modal-body">
                    <form name="form-nouveauCritere" id="form-nouveauCritere" action="CreerCritere" method="post" class="form-horizontal">
                        <div class="form-group">
                            <div class="col-md-3">
                                <label>Critère :</label>
                            </div>
                            <div class="col-md-5">
                                @Html.TextBoxFor(model => model.Item2.Critere, new { id="critere", @class = "form-control" })
                                @Html.Label("Le champ Critère est obligatoire!", new { id = "msgErrorCritere", @style = "color:red;display:none;font-weight: normal;" })
                                
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-3">
                                <label>Coefficient :</label>
                            </div>
                            <div class="col-md-5">
                                @Html.TextBoxFor(model => model.Item2.Valeur, new { id="valeur",@class = "form-control" })
                                @Html.Label("Le champ Valeur est obligatoire!", new { id = "msgErrorValeur", @style = "color:red;display:none;font-weight: normal;" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-3">
                                <label for="annee"> Année :</label>
                            </div>
                            <div class="col-md-4">
                                @Html.DropDownListFor(model => model.Item2.Annee, ViewBag.Annee as SelectList, "Sélectionnez", new { id = "AnneeA", @class = "form-control" })
                                @Html.Label("Le champ Année est obligatoire!", new { id = "msgErrorAnnee", @style = "color:red;display:none;font-weight: normal;" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-3">
                                <label for="grade"> Grade :</label>
                            </div>
                            <div class="col-md-4">
                                @Html.DropDownListFor(model => model.Item2.GradeId, ViewBag.Grade as SelectList, "Sélectionnez", new { id = "GradesA", @class = "form-control" })
                                @Html.Label("Le champ Grade est obligatoire!", new { id = "msgErrorGrade", @style = "color:red;display:none;font-weight: normal;" })
                            </div>
                        </div>
                        <div class="modal-footer">
                            <input value="Enregistrer" class="btn btn-custom btn-lg" onclick="javascript:Enregistrer()" />
                            <button type="button" class="btn btn-default" data-dismiss="modal">Fermer</button>
                        </div>
                    </form>
                </div>
                
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->
    <!-- **** editCritère **** -->

    <div id="editCritere" class="modal fade">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title">Modifier Critère de classement</h4>
                </div>
                <div class="modal-body">
                    <form name="form-editCritere" id="form-editCritere" action="ModifierCritere" method="post" class="form-horizontal">

                        <div class="form-group">
                            @Html.Hidden("critereIdM")
                            <div class="col-md-3">
                                <label>Critère</label>
                            </div>
                            <div class="col-md-5">
                                @Html.TextBoxFor(model => model.Item2.Critere, new { id = "critereM", @class = "form-control" })
                                @Html.Label("Le champ Critère est obligatoire!", new { id = "msgErrorCritereM", @style = "color:red;display:none;font-weight: normal;" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-3">
                                <label>Coefficient</label>
                            </div>
                            <div class="col-md-5">
                                @Html.TextBoxFor(model => model.Item2.Valeur, new { id="valeurM", @class = "form-control" })
                                @Html.Label("Le champ Valeur est obligatoire!", new { id = "msgErrorValeurM", @style = "color:red;display:none;font-weight: normal;" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-3">
                                <label for="annee"> Année :</label>
                            </div>
                            <div class="col-md-4">
                                @Html.DropDownList("AnneeM", null,"Sélectionnez", new { @class = "form-control" })
                                @Html.Label("Le champ Année est obligatoire!", new { id = "msgErrorAnneeM", @style = "color:red;display:none;font-weight: normal;" })

                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-3">
                                <label for="grade"> Grade :</label>
                            </div>
                            <div class="col-md-4">
                                @Html.DropDownList("GradesM", null, "Sélectionnez", new { @class = "form-control" })
                                @Html.Label("Le champ Grade est obligatoire!", new { id = "msgErrorGradeM", @style = "color:red;display:none;font-weight: normal;" })

                            </div>
                        </div>
                        <div class="modal-footer">
                            <input value="Modifier" class="btn btn-custom btn-lg" onclick="javascript:Modifier()" />
                            <button type="button" class="btn btn-default" data-dismiss="modal">Fermer</button>
                        </div>
                    </form>

                </div>
                
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->
    <!-- **** deleteCritere **** -->

    <div id="deleteCritere" class="modal fade">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title">Suppression d&#146;un critère de classement</h4>
                </div>
                <form name="form-nouveauCritere" id="form-nouveauCritere" action="SupprimerCritere" method="post" class="form-horizontal">
                    <div class="modal-body">
                        <p>Etes vous sûr de vouloir supprimer ce critère?</p>
                    </div>
                    <div class="modal-footer">
                        <a class="btn btn-custom btn-xs" href="javascript:deleteCritere()" title="Supprimer">
                            <i class="fa fa-trash-o">Oui</i>
                        </a>
                        <button type="button" class="btn btn-default" data-dismiss="modal">Non</button>
                    </div>
                </form>
</div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->
