@model Tuple<ma.metl.sirh.Model.Dto.InterfacageActeCandidatRechercheVM, List<ma.metl.sirh.Model.Dto.InterfacageActeCandidatResultatVM>>

@{
    
}

<fieldset class="col-md-10 col-md-offset-1">
    <legend>Critères de recherche</legend>

    @*<form name="form-recherche" id="form-recherche" action="" method="post" class="form-horizontal">*@
    @using (Html.BeginForm("RechercherCandidats", "InterfacageGipeOrd", FormMethod.Post, new { name = "form-recherche", id = "form-recherche", @class = "form-horizontal"}))
    {
        <div class="form-group">
            <div class="col-md-3">
                <label for="annee">Année :</label>
            </div>
            <div class="col-md-3">
                @Html.DropDownListFor(x => x.Item1.Annee, ViewBag.Annees as SelectList, "---- Sélectionnez ----", new { @class = "form-control" })
            </div>
            <div class="col-md-3">
                <label for="grade">Grade :</label>
            </div>
            <div class="col-md-3">
                @Html.DropDownListFor(x => x.Item1.GradeId, ViewBag.Grades as SelectList, "Sélectionnez", new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-3">
                <label for="statutacte">Statut :</label>
            </div>
            <div class="col-md-3">
                @Html.DropDownListFor(x => x.Item1.Statut, ViewBag.Status as SelectList, "---- Sélectionnez ----", new { @class = "form-control" })
            </div>
        </div>
    }
    @*</form>*@
    <div class="b-right">
        <a class="btn btn-custom" href="#" onclick="$('#form-recherche').submit()">
            <i class="fa fa-search"></i>
            Rechercher
        </a>
    </div>

</fieldset>

<fieldset class="col-md-10 col-md-offset-1">


    <legend>R&eacute;sultats de Recherche</legend>
    <div class="table-responsive">
        <table class="table table table-bordered table-striped  table-hover" id="myTable">
            <thead>
                <tr>
                    <th><input id="chkSelectAll" name="case" type="checkbox" /></th>
                    <th><div align="center">N°DOTI </div></th>
                    <th><div align="center">Nom</div></th>
                    <th><div align="center">Prénom</div></th>
                    <th><div align="center">Statut</div></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Item2)
                {
                    <tr>
                        <td align="center"><input name="case" type="checkbox" class="chkSelect" /></td>
                        <td><a href="javascript:GetSynthese('@item.NumDoti')">@item.NumDoti</a></td>
                        <td>@item.CandidatNom</td>
                        <td>@item.CandidatPrenom</td>
                        <td>@item.Statut</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</fieldset>

<fieldset class="col-md-10 col-md-offset-1">
    <legend>Synthèse</legend>

    <div id="SyntheseActeContent">

    </div>

    @RenderPage("SyntheseActe.cshtml")

    @*<div class="b-right" style="margin-top: 10px;">
        <a class="btn btn-custom" href="#" id="btngenerer">
            <i class="fa fa-legal"></i>
            Générer
        </a>
        <a class="btn btn-custom" href="#">
            <i class="fa fa-legal"></i>
            Editer
        </a>
        <a class="btn btn-custom" href="#">
            <i class="fa fa-check"></i>
            Sauvegarder
        </a>
        <a class="btn btn-custom" href="#">
            <i class="fa fa-send"></i>
            Envoyer
        </a>
    </div>*@

</fieldset>


<!-- ******* Popups ****** -->

<script type="text/javascript">


    $( document ).ready(function() {

        $('#myTable').DataTable().destroy();

        $('#myTable').DataTable({
            "columnDefs": [{
                "targets": [0],
                "orderable": false
            }],
            "stateSave": true
        });

        var allPages = $('#myTable').DataTable().cells().nodes();

        $("#chkSelectAll").bind("change", function () {
            $(allPages).find('input.chkSelect[type="checkbox"]').prop('checked', $(this).prop("checked"));
            //$(".chkSelect").prop("checked", $(this).prop("checked"));
        });

        $(allPages).find('input.chkSelect[type="checkbox"]').bind("change", function () {
            if (!$(this).prop("checked"))
                $("#chkSelectAll").prop("checked", false);
        });

    });

    function GetSynthese(numDotti) {
        $.ajax({
            type: "get",
            url: '@Url.Action("RenderSynthes", "InterfacageGipeOrd")',
            data: { numDotti: numDotti },
            datatype: 'json',
            success: function(d) {
                /* d is the HTML of the returned response */
                $("#SyntheseActeContent").html(d); //replaces previous HTML with action
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                alert(textStatus)
            }
        });
    }

</script>
