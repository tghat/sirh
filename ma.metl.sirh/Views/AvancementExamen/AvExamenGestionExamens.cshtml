@model Tuple<ma.metl.sirh.Model.Dto.CritereRechercheDto, IEnumerable<ma.metl.sirh.Model.Dto.CandidatResultatDto>, IEnumerable<ma.metl.sirh.Model.Dto.MatiereDto>, ma.metl.sirh.Model.Email>

<script type="text/javascript">

      function validerMatiere(id, idMatiere, idExamen) {
        
        var date = document.getElementById('tblGipeOrdList_' + id + '__Date').value;
        var dureeH = document.getElementById('tblGipeOrdList_' + id + '__DureeH').value;
        var dureeM = document.getElementById('tblGipeOrdList_' + id + '__DureeM').value;
        var heureH = document.getElementById('tblGipeOrdList_' + id + '__HeureDebutH').value;
        var heureM = document.getElementById('tblGipeOrdList_' + id + '__HeureDebutM').value;
        var url = '@Url.Action("ValiderMatiere", "AvancementExamen")';
        $.getJSON(url, { MatiereId: idMatiere, ExamenId: idExamen, DateMatiere: date, DureeH: dureeH, DureeM: dureeM, HeureDebutH: heureH, HeureDebutM: heureM }, function (data) {
            alert(data);
        });

      }

      function ValiderExamen()
      {
          var date = $('#DateExamen').val();
          var url = '@Url.Action("ValiderExamen", "AvancementExamen")';
          $.getJSON(url, { IdExam : '@ViewBag.IdExam', DateExamen: date, nbrTotal: '@ViewBag.nbrTotal', nbrEligibleDateExam: '@ViewBag.nbrCandidatEligibleDateExamen'}, function (data) {
              alert(data);
          });
      }

    function GenererNoteCirculaire() {
        window.location = '@Url.Action("GenerateAndDisplayReport", "AvancementExamen")';
    }

   
    function GenererArreteOuverture() {
        window.location = '@Url.Action("GenererArreteOuverture", "AvancementExamen")'+'?IdExam='+'@ViewBag.IdExam';
    }


    

</script>

@{var roles = Session["listRoles"] as List<string>;}

<div class="row">
    <div class="col-md-12">
        <h1 class="page-header">Date des examens</h1>
    </div>
    <!-- /.col-md-12 -->
</div>
<div class="row">
    <fieldset class="col-md-10 col-md-offset-1">

        <legend>Critères de Recherche</legend>
        <form name="form-recherche" id="form-recherche" action="" method="post" class="form-horizontal">
            <div class="form-group">
                <div class="col-md-3">
                    <label for="annee">Année de promotion :</label>
                </div>
                <div class="col-md-3">
                    @Html.DropDownListFor(x => x.Item1.AnneeProm, ViewBag.Annee as SelectList, "Sélectionnez", new { @class = "form-control", onchange = "this.form.submit();" })
                    @Html.ValidationMessageFor(x => x.Item1.AnneeProm)
                </div>

                <div class="col-md-3">
                    <label for="Grade">Grade :</label>
                </div>
                <div class="col-md-3">
                    @Html.DropDownListFor(x => x.Item1.GradeId, ViewBag.Grades as SelectList, "Sélectionnez", new { @class = "form-control", id = "GradeId", onchange = "this.form.submit();" })
                    @Html.ValidationMessageFor(x => x.Item1.GradeId)
                </div>

            </div>
            <div class="form-group">
                <div class="col-md-3">
                    <label for="Grade">Examen :</label>
                </div>
                <div class="col-md-3">
                    @Html.DropDownListFor(x => x.Item1.ExamenId, ViewBag.Examens as SelectList, "Sélectionnez", new { id = "ExamenId", @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Item1.ExamenId)
                </div>
                <div class="col-md-3">
                    <label for="dateExamen">Date Examen:</label>
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(x => x.Item1.DateExamen, DateTime.Now.ToString("d"), new { id = "DateExamen", @class = "form-control datepicker" })
                    @Html.ValidationMessageFor(x => x.Item1.DateExamen)
                </div>
            </div>

            <div class="b-right">
                <input type="submit" value="Afficher" class="btn btn-default" />
            </div>
        </form>
    </fieldset>
    <div class="row">
        <div class="col-md-0 col-md-offset-0">

            @Html.Label("msgError", "", new { @class = "form-control" }) @Html.ValidationMessage("msgError", new { @style = "color:red" })

        </div>
    </div>
    @if (ViewBag.show == true)
    {
        <fieldset class="col-md-10 col-md-offset-1">
            @Html.Hidden("hiddennbrTotal",ViewBag.nbrTotal as string)
            <legend>Liste des candidats</legend>
            <div class="table-responsive">
                <table class="table table table-bordered table-striped  table-hover" id="myTable">
                    <thead>
                        <tr>
                            <th><div align="center">N°DOTI </div></th>
                            <th><div align="center">Nom</div></th>
                            <th><div align="center">Prénom</div></th>
                            <th><div align="center">Ancien grade</div></th>
                            <th><div align="center">Nouveau grade</div></th>
                            <th><div align="center">Date d'effet</div></th>
                            <th><div align="center">Direction</div></th>
                            <th><div align="center">Localité</div></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Item2)
                        {
                            <tr>
                                <td>@Html.DisplayFor(modelItem => item.NumDoti)</td>
                                <td>@Html.DisplayFor(modelItem => item.Nom)</td>
                                <td>@Html.DisplayFor(modelItem => item.Prenom)</td>
                                <td>@Html.DisplayFor(modelItem => item.AncienGrade)</td>
                                <td>@Html.DisplayFor(modelItem => item.NouveauGrade)</td>
                                <td>@Html.DisplayFor(modelItem => item.DateEffet)</td>
                                <td>@Html.DisplayFor(modelItem => item.Direction)</td>
                                <td>@Html.DisplayFor(modelItem => item.Localite)</td>
                            </tr> }
                    </tbody>
                </table>
                <div class="form-group">
                    <div class="col-md-4">

                        <label id="label-pourcentageCandidatDate" for="pourcentageCandidatDate">@ViewBag.dateexamen </label>
                    </div>
                    <div class="col-md-2">
                        @Html.TextBox("pourcentageCandidatDate", (string)ViewBag.pourcentageCandidatDate, new { @class = "form-control" })
                    </div>
                    <div class="col-md-4">
                        <label id="label-pourcentageCandidatAnnee" for="pourcentageCandidatAnnee">@ViewBag.nbdateexamen</label>
                    </div>
                    <div class="col-md-2">
                        @Html.TextBox("pourcentageCandidatAnnee", (string)ViewBag.nbrCandidatEligibleDateExamen, new { @class = "form-control" })
                    </div>
                </div>
            </div>
            <br />
        </fieldset>

        <fieldset id="listeMatiere" class="col-md-10 col-md-offset-1">
            <legend>Liste des matiéres</legend>
            <div class="table-responsive">
                <table class="table table table-bordered table-striped  table-hover">
                    <thead>
                        <tr>
                            <th><div align="center">Matière </div></th>
                            <th><div align="center">Date</div></th>
                            <th><div align="center">Coefficient</div></th>
                            <th><div align="center">Durée</div></th>
                            <th><div align="center">Heure de début</div></th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>

                        @{
                        var tblGipeOrdList = Model.Item3.ToList();
                        for (int i = 0; i < tblGipeOrdList.Count(); i++)
                        {
                            <tr>
                                <td>@Html.DisplayFor(item => tblGipeOrdList[i].Intitule)</td>
                                <td>@Html.TextBoxFor(item => tblGipeOrdList[i].Date, "{0:dd/MM/yyyy}", new { @class = "form-control datepicker" })</td>
                                <td>@Html.DisplayFor(item => tblGipeOrdList[i].Coefficient)</td>
                                <td>@Html.DropDownListFor(item => tblGipeOrdList[i].DureeH, tblGipeOrdList[i].ListDureeH as SelectList, "Sélectionnez", new { @class = "form-control" }) @Html.DropDownListFor(item => tblGipeOrdList[i].DureeM, tblGipeOrdList[i].ListDureeM as SelectList, "Sélectionnez", new { @class = "form-control" })</td>
                                <td>@Html.DropDownListFor(item => tblGipeOrdList[i].HeureDebutH, tblGipeOrdList[i].ListHeureDebutH as SelectList, "Sélectionnez", new { @class = "form-control" }) @Html.DropDownListFor(item => tblGipeOrdList[i].HeureDebutM, tblGipeOrdList[i].ListHeureDebutM as SelectList, "Sélectionnez", new { @class = "form-control" })</td>
                                <td>
                         @if (roles.Contains("AvExamen_Examen_Modifier "))
                                  {
                                    <a class="btn btn-custom btn-xs" href="javascript:validerMatiere(@i,@tblGipeOrdList[i].IdMatiere,@tblGipeOrdList[i].IdExamen)" onclick="return confirm('etes vous sur de vouloir valider?');" title="Valider">
                                        <i class="fa fa-check"></i>
                                    </a>
                                   }
                                </td>
                            </tr>
                        }
                        }
                    </tbody>

                </table>

                <label id="label-pourcentageCandidatDate" for="pourcentageCandidatDate">Etat d’envoi de la note circulaire :  </label>
            </div>
            <div class="b-right">
            @if (roles.Contains("AvExamen_Examen_EditerDec "))
                  {
                <a class="btn btn-custom" href="#">
                    <i class="fa fa-gear"></i>
                    Editer Décision
                </a>
                  }
            @if (roles.Contains("AvExamen_Examen_EditerAO "))
                  {
                <a class="btn btn-custom" href="javascript:GenererArreteOuverture()">
                    <i class="fa fa-gear"></i>
                    Editer Arrêté d'ouverture
                </a>
                  }
             @if (roles.Contains("AvExamen_Examen_ValiderAO "))
                  {
                <a class="btn btn-success" href="#">

                    <i class="fa fa-check"></i>
                    Valider Arrêté d'ouverture
                </a>
                 }
              @if (roles.Contains("AvExamen_Examen_Envoyer "))
                  {
                <a class="btn btn-custom btn-xs" href="javascript:popup('Envoi-notes')" title="Envoyer une note">
                    <i class="fa fa-envelope"></i>
                    Envoyer une note circulaire
                </a>
                 }
              @if (roles.Contains("AvExamen_Examen_GenererListe "))
                  {
                <a class="btn btn-custom" href="javascript:GenererNoteCirculaire()">
                    <i class="fa fa-gear"></i>
                    Générer Liste
                </a>
                 }
              @if (roles.Contains("AvExamen_Examen_Modifier "))
                 {
                <a class="btn btn-success" href="javascript:ValiderExamen()">
                    <i class="fa fa-check"></i>
                    Valider
                </a>
                 }
            </div>

        </fieldset>

    }
</div>


<!-- **** Envoi-notes **** -->

<div id="Envoi-notes" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Envoi de la note circulaire</h4>
            </div>
            <div class="modal-body">
                <fieldset class="col-md-10 col-md-offset-1">
                    <legend>Envoi par email</legend>
                    <form name="form-envoi-notes" id="form-envoi-notes" action="EnvoyerEmail" method="post" class="form-horizontal">

                        <div class="form-group">
                            <div class="col-md-3">
                                <label for="email">Direction concernée :</label>
                            </div>
                            <div class="col-md-9">
                                @Html.DropDownListFor(x => x.Item4.DirectionId, ViewBag.Directions as SelectList, "Sélectionnez", new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-3">
                                <label for="email">E-mail :</label>
                            </div>
                            <div class="col-md-9">
                                @Html.TextBoxFor(x => x.Item4.Destinataire, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-3">
                                <label for="Objet">Objet :</label>
                            </div>
                            <div class="col-md-9">
                                @Html.TextBoxFor(x => x.Item4.Objet, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-3">
                                <label for="Message">Message :</label>
                            </div>
                            <div class="col-md-9">
                                @Html.TextAreaFor(x => x.Item4.Message, new { rows = 2, @class = "form-control" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-4">
                                <a href="javascript:GenererNoteCirculaire()">
                                    <i class="fa fa-download"></i>
                                    Télécharger la note
                                </a>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <input type="submit" value="Envoyer" class="btn btn-custom btn-xs" />
                            <button type="button" class="btn btn-default" data-dismiss="modal">Fermer</button>
                        </div>
                    </form>
                </fieldset>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<script type="text/javascript">
    $(document).ready(function () {
        jQuery.validator.methods.date = function (value, element) {
            var isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);
            if (isChrome) {
                var d = new Date();
                return this.optional(element) || !/Invalid|NaN/.test(new Date(d.toLocaleDateString(value)));
            } else {
                return this.optional(element) || !/Invalid|NaN/.test(new Date(value));
            }
        };
    });
</script>
